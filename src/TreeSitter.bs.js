// Generated by ReScript, PLEASE EDIT WITH CARE

import WebTreeSitter from "web-tree-sitter";
import * as WebTreeSitter$1 from "web-tree-sitter";

var Parser = {};

var Language = {};

function $$delete(t) {
  t.delete();
}

function parse(t, input) {
  if (input.TAG === /* String */0) {
    return t.parse(input._0);
  } else {
    return t.parse("Js.log");
  }
}

function reset(t) {
  t.reset();
}

function getLanguage(t) {
  return t.getLanguage;
}

function setLanguage(t, language) {
  t.setLanguage(language);
}

function getLogger(t) {
  return t.getLogger();
}

function setLogger(t, params) {
  t.setLogger(params);
}

function setTimeoutMicros(t, value) {
  t.setTimeoutMicros(value);
}

function getTimeoutMicros(t) {
  return t.getTimeoutMicros();
}

((async function (param) {
        await WebTreeSitter$1.init();
        var parser = new WebTreeSitter();
        var rescript = WebTreeSitter$1.Language.load("file");
        parser.setLanguage(rescript);
        var tree = parse(parser, {
              TAG: /* String */0,
              _0: "let a = 1\n"
            });
        console.log(tree.rootNode.toString());
      })(undefined));

export {
  Parser ,
  Language ,
  $$delete ,
  parse ,
  reset ,
  getLanguage ,
  setLanguage ,
  getLogger ,
  setLogger ,
  setTimeoutMicros ,
  getTimeoutMicros ,
}
/*  Not a pure module */
